// Generated by @wagmi/cli@0.1.15 on 4/11/2023 at 4:51:54 PM
import {
  getContract,
  GetContractArgs,
  readContract,
  ReadContractConfig,
  writeContract,
  WriteContractArgs,
  WriteContractPreparedArgs,
  WriteContractUnpreparedArgs,
  prepareWriteContract,
  PrepareWriteContractConfig,
} from '@wagmi/core'

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Counter
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const counterABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'decrement',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getCurrentNumber',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'increment',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Core
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link counterABI}__.
 */
export function getCounter(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: counterABI, ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link counterABI}__.
 */
export function readCounter<
  TAbi extends readonly unknown[] = typeof counterABI,
  TFunctionName extends string = string,
>(config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi'>) {
  return readContract({
    abi: counterABI,
    ...config,
  } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link counterABI}__.
 */
export function writeCounter<TFunctionName extends string>(
  config:
    | Omit<WriteContractPreparedArgs<typeof counterABI, TFunctionName>, 'abi'>
    | Omit<
        WriteContractUnpreparedArgs<typeof counterABI, TFunctionName>,
        'abi'
      >,
) {
  return writeContract({ abi: counterABI, ...config } as WriteContractArgs<
    typeof counterABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link counterABI}__.
 */
export function prepareWriteCounter<
  TAbi extends readonly unknown[] = typeof counterABI,
  TFunctionName extends string = string,
>(config: Omit<PrepareWriteContractConfig<TAbi, TFunctionName>, 'abi'>) {
  return prepareWriteContract({
    abi: counterABI,
    ...config,
  } as unknown as PrepareWriteContractConfig<TAbi, TFunctionName>)
}
